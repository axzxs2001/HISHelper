
@{
    ViewData["Title"] = "我的工作记录";
}

@section css{
    <style>
        [v-cloak] {
            display: none;
        }
    </style>
}

<h2>我的工作记录</h2>
<div class="row">

    <div class="col-md-3">
        <select id="yearselect" v-cloak class="form-control" v-model="selected" v-on:change="ChangeYear">
            <option v-for="item in items" v-bind:value="item.value">{{item.year}}</option>
        </select>
    </div>
    <div class="col-md-3">
        <select id="monthselect" class="form-control" v-cloak v-model="selected" v-on:change="ChangeMonth">
            <option v-for="item in items" v-bind:value="item.value">{{item.month}}</option>
        </select>
    </div>
    <div class="col-md-6">

    </div>
</div>
<hr style="border-color:#cccccc;" />
<div class="row">
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th style="width:125px;">日期</th>
                <th>工作记录</th>
                <th>备注</th>
                <th style="width:50px">操作</th>
            </tr>
        </thead>
        <tbody id="workitemtr"></tbody>
    </table>
</div>

<!--编辑工作记录弹出框-->
<div class="modal fade" v-cloak id="editworkitem" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="newworkitem">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h4 class="modal-title" id="myMod">
                    编号工作记录
                </h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <textarea rows="6" class="form-control" placeholder="工作记录内容" v-model="workitem.workcontent"></textarea>
                    </div>
                </div>
                <div class="row" style="margin-top:5px;">
                    <div class="col-md-12">
                        <textarea rows="4" class="form-control" placeholder="备注" v-model="workitem.memos"></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success btn-sm" data-dismiss="modal" v-on:click="savaWorkItem">
                    保存
                </button>
                <button type="button" class="btn btn-danger btn-sm" data-dismiss="modal">
                    取消
                </button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal -->
</div>
@section Scripts{
    <!--tr模版-->
    <script type="text/x-template" id="mywork-tr">
        <tr v-bind:id="workitem.recorddate">
            <td>{{workitem.recorddate}}</td>
            <td>{{workitem.workcontent}}</td>
            <td>{{workitem.memos}}</td>
            <td>
                <button class="btn btn-success btn-xs" v-on:click="editClick">编辑</button>
            </td>
        </tr>
    </script>

    <script>
        //年和月的Vue
        var yearVue, monthVue, editVue = null;
        //加载年下拉列表
        function LoadYear(year) {
            yearVue = new Vue({
                el: '#yearselect',
                data: {
                    selected: year,
                    items: [
                        { year: '2017年', value: '2017' },
                        { year: '2018年', value: '2018' },
                        { year: '2019年', value: '2019' },
                        { year: '2020年', value: '2020' },
                        { year: '2021年', value: '2021' },
                        { year: '2022年', value: '2022' },
                        { year: '2023年', value: '2023' },
                        { year: '2024年', value: '2024' },
                        { year: '2025年', value: '2025' },
                        { year: '2026年', value: '2026' },
                        { year: '2027年', value: '2027' }
                    ]
                },
                methods: {
                    ChangeYear: function () {
                        QueryWorkItems(this.selected, monthVue.selected)
                    }
                }
            })
        }
        //加载月下拉列表
        function LoadMonth(month) {
            monthVue = new Vue({
                el: '#monthselect',
                data: {
                    selected: month,
                    items: [
                        { month: '01月', value: '01' },
                        { month: '02月', value: '02' },
                        { month: '03月', value: '03' },
                        { month: '04月', value: '04' },
                        { month: '05月', value: '05' },
                        { month: '06月', value: '06' },
                        { month: '07月', value: '07' },
                        { month: '08月', value: '08' },
                        { month: '09月', value: '09' },
                        { month: '10月', value: '10' },
                        { month: '11月', value: '11' },
                        { month: '12月', value: '12' }
                    ]
                },
                methods: {
                    ChangeMonth: function () {
                        QueryWorkItems(yearVue.selected, this.selected)
                    }
                }
            })
        }

        //工作记录组件
        Vue.component("mywork-row", {
            props: ["workitem"],
            template: '#mywork-tr',
            methods: {
                editClick: function () {
                    this.$emit('editworkitem', this.workitem)
                }
            }
        })
        //绑定新工作记录编辑
        function WorkItemEdite(workitem) {

            if (editVue == null) {
                editVue = new Vue({
                    el: "#newworkitem",
                    data: {
                        workitem: workitem
                    },
                    methods: {
                        savaWorkItem: function () {
                            EditSavaWorkItme(this.workitem);
                        }
                    }
                });
            }
            else {
                editVue.workitem = workitem;
            }
            $("#editworkitem").modal('show');
        }

        function EditSavaWorkItme(workitem) {
            $.ajax({
                method: "POST",
                url: 'addwork',
                data: {
                    workItem: workitem
                },
                success: function (backData) {
                    if (backData.result === 1) {
                        alert(backData.message)

                    } else {
                        alert(backData.message)
                    }
                },
                error: function (error) {
                    alert(error.statusText)
                }
            })

        }
        //初始化
        $(function () {
            //获取当前年和月
            var today = new Date();
            var year = today.getFullYear();
            var month = today.getMonth() + 1;
            //加载年下拉列表
            LoadYear(year);
            //加载月下拉列表
            LoadMonth(month);
            QueryWorkItems(year, month);
        })

        //按年月查询工作记录
        function QueryWorkItems(year, month) {
            $("#workitemtr").html('<tr is="mywork-row" v-for="workitem in workitems" v-on:editworkitem="editWorkItem" v-bind:workitem="workitem"></tr>');
            $.ajax({
                type: 'GET',
                url: '/monthworks',
                data: {
                    year: year,
                    month: month
                },
                success: function (backData) {
                    if (backData.result == 1) {
                        
                        new Vue({
                            el: "#workitemtr",
                            data: {
                                workitems: backData.data
                            },
                            methods: {
                                editWorkItem: function (workitem) {
                                    WorkItemEdite(workitem);
                                }
                            }
                        });

                        SetTodayColor();
                    }
                },
                error: function (error) {
                    alert(error.statusText);
                }
            })

            function SetTodayColor() {
                var date = new Date();
                var month = date.getMonth() + 1;
                var strDate = date.getDate();
                if (month >= 1 && month <= 9) {
                    month = "0" + month;
                }
                if (strDate >= 0 && strDate <= 9) {
                    strDate = "0" + strDate;
                }
                var currentdate = date.getFullYear() + "年" + month + "月" + strDate + "日"
                $("#" + currentdate).attr("style", "background-color:lightgreen");
            }
        }
    </script>
}
